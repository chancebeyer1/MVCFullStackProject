<?php

if (!defined('BASEPATH')) {
    exit('No direct script access allowed');
}

class Buffalo_model extends CI_Model
{
    
    public function __construct()
    {
        parent::__construct();
        $this->v = true;
        $this->v = false;
        
        // JAN codes array
        $this->jan_codes = array(
            'TeraStation' => array(
                 '00029', '00032', '00033', '00034', '00035', '00036', '00446', '00447', '00448', '00449', '00450', '00451', '00452', '00453', '00454', '00455', '00456', '00457', '00458', '00459', '00460', '00461', '00462', '00463', '00464', '00465', '00466', '00467', '00468', '00469', '00470', '00471', '00472', '00473', '00474', '00475', '00476', '00477', '00478', '00479', '00480', '00481', '00560', '00561', '00562', '00563', '00619', '00640', '00641', '00645', '00647', '00648', '00649', '00650', '00651', '00652', '00653', '00654', '00655', '00656', '00657', '00658', '00659', '00660', '00661', '00662', '00663', '00664', '00665', '00666', '00667', '00668', '00669', '00670', '00671', '00672', '00673', '00674', '00675', '00676', '00677', '00678', '00679', '00680', '00681', '00682', '00683', '00684', '00685', '00686', '00687', '00688', '00689', '00690', '00691', '00692', '00693', '00694', '00695', '00696', '00697', '00698', '00699', '00700', '00701', '00712', '00713', '00714', '00715', '00716', '00717', '00776', '00777', '00778', '00779', '00780', '00781', '00782', '00882', '00883', '00884', '00885', '00886', '00887', '00888', '00930', '00932', '00933', '00936', '00938', '00939', '00940', '00941', '01242', '01243', '01315', '01316', '01317', '01318', '01319', '01320', '01321', '01322', '01323', '01324', '01325', '01326', '01327', '01336', '01337', '01338', '01339', '01390', '01570', '01571', '01572', '01615', '01616', '01617', '01645', '01646', '01647', '01648', '01649', '01650', '01651', '01652', '01653', '01654', '01655', '01656', '01657', '01658', '01659', '01660', '01661', '01662', '01676', '01677', '01678', '01679', '01700', '01701', '01733', '01734', '01735', '01736', '01737', '01738', '01739', '01740', '01741', '01742', '01743', '01744', '01745', '01746', '01747', '01748', '01749', '01750', '01751', '01752', '01753', '01754', '01755', '01756', '01757', '01758', '01763', '01764', '01765', '01766', '01767', '01768', '01769', '01770', '01771', '01772', '01773', '01774', '01775', '01776', '01777', '01778', '01779', '01780', '01781', '01782', '01783', '01784', '01785', '01786', '01787', '01788', '01789', '01790', '01791', '01792', '01793', '01794', '01795', '01796', '01797', '01801', '01802', '01803', '01810', '01811', '01812', '01813', '01814', '01815', '01901', '01902', '02012', '02013', '02014', '02041', '02042', '02043', '02049', '02070', '02071', '02072', '02073', '02099', '02100', '02101', '02125', '02126', '02127', '02128', '02129', '02130', '02131', '02132', '02136', '02137', '02138', '02139', '02140', '02141', '02142', '02299', '02300', '02301', '02302', '02303', '02304', '02361', '02362', '02363', '02364', '02365', '02366', '02367', '02381', '02382', '02383', '02437', '02438', '02439', '02440', '02522', '02523', '02528', '02529', '02530', '02531', '02606', '02607', '02608', '02609', '02622', '02623', '02624', '02625', '02644', '02645', '02646', '02647', '02648', '02649', '02650', '02660', '02661', '02662', '02663', '02664', '02665', '02666', '02667', '02668', '02669', '02670', '02671', '02672', '02673', '02674', '02675', '02676', '02677', '02678', '02679', '02680', '02681', '02682', '02683', '02684', '02685', '02686', '02687', '02688', '02689', '02690', '02691', '02692', '02693', '02694', '02695', '02696', '02697', '02698', '02699', '02700', '02701', '02702', '02703', '02704', '02705', '02770', '02771', '02772', '02773', '02774', '02775', '02776', '02777', '02778', '02779', '02780', '02781', '02782', '02783', '02784', '02785', '02786', '02787', '02788', '02789', '02790', '02791', '02792', '02793', '02794', '02795', '02796', '02797', '02798', '02799', '02800', '02801', '02802', '02803', '02804', '02805', '02806', '02807', '02808', '02809', '02810', '02811', '02812', '02869', '02926', '02927', '02928', '02929', '02961', '02962', '02963', '02964', '02965', '02966', '02967', '02968', '02969', '02970', '02971', '02972', '03033', '03034', '03035', '03036', '03037', '03103', '03245', '03249', '03250', '03251', '03252', '03365', '03366', '03367', '03371', '03378', '03379', '03380', '03394', '03395', '03396', '03397', '03471', '03472', '03473', '03628', '03629', '03630', '03631', '03757', '03758', '03759', '03760', '03761', '03762', '03763', '03764', '03765', '03766', '03767', '03768', '03769', '03770', '03771', '03772', '03773', '03774', '03775', '03776', '03777', '03778', '03779', '03780', '03781', '03782', '03783', '03784', '03785', '03786', '03787', '03788', '03789', '03790', '03791', '03792', '03793', '03794', '03795', '03796', '03797', '03798', '03819', '03820', '03821', '03845', '03846', '03847', '03848', '03849', '03850', '03851', '03852', '03853', '03854', '03855', '03856', '03857', '03858', '03859', '03860', '03861', '03862', '03863', '03864', '03865', '03866', '03867', '03868', '03869', '03870', '03871', '03872', '03873', '03874', '03875', '03876', '03877', '03986', '03987', '03988', '04005', '04006', '04007', '04008', '04009', '04010', '04089', '04090', '04091', '04092', '04093', '04094', '04095', '04096', '04097', '04098', '04099', '04100', '04101', '04102', '04103', '04104', '04105', '04106', '04107', '04108', '04147', '04148', '04149', '04150', '04151', '04152', '04153', '04154', '04155', '04156', '04157', '04158', '04231', '04236', '04237', '04238', '04390', '04391', '04392', '04393', '04394', '04395', '04447', '04448', '04449', '04451', '04452', '04453', '04454', '04455', '04456', '04457', '04458', '04459', '04460', '04461', '04484', '04496', '04537', '04538', '04539', '04540', '04541', '04542', '04543', '04544', '04545', '04554', '04555', '46901', '46902', '46903', '46904', '46905', '46906', '46907', '46908', '46909', '46910', '46911', '46912', '46913', '46915', '46916', '46917', '46918', '46919', '46980', '46981', '46982', '46983', '46984', '46985', '46986', '46987', '46988', '46989', '46990', '46991', '46992', '46993', '46994', '46995', '46996', '46997', '46998', '46999', '47000', '52930', '52931', '52932', '52933', '52934', '52935', '52936', '52937', '52938', '54109', '54110', '54111', '54112', '54113', '54114', '54132', '54162', '54167', '54175', '54181', '54190', '54208', '54209', '54210', '54211', '54244', '54245', '54247', '54306', '54307', '54308', '54309', '54310', '54311', '54369', '54391', '54408', '54409', '54410', '54411', '54490', '54495', '54496', '54497', '54498', '54499', '54500', '55777', '55778', '55779', '55780', '55781', '55782', '55783', '55784', '55785', '58134', '58146', '58147', '58148', '58149', '58176', '58177', '58178', '58179', '58180', '58181', '58182', '58183', '58184', '58185', '58186', '58187', '58188', '58189', '58190', '58191', '58192', '58193', '58194', '58195', '58196', '58197', '58198', '58199', '58200', '58246', '58247', '58248', '58249', '58250', '58251', '58286', '58289', '58291', '58296', '58301', '58310', '58313', '58327', '58328', '58329', '58330', '58362', '58363', '58439', '58440', '58441', '58442', '58443', '58444', '58477', '58480', '58481', '58482', '58488', '58493', '58504', '58518', '58519', '58520', '58521', '58554', '58555', '58597', '58600', '58616', '58617', '58662', '58663', '58664', '58665', '58755', '58756', '58757', '58758', '58759', '58765', '58766', '58767', '58768', '58774', '58775', '58776', '58777', '58839', '58840', '58841', '58842', '58843', '58844', '58877', '58879', '58882', '58887', '58892', '58897', '58918', '58919', '58920', '58921', '58967', '58968', '98711', '98714', '98715', '98722', '98723', '98724', '98725', '98755', '98756', '98757', '98758', '98759', '98760', '98761', '98762', '98763', '98764', '98765', '98766', '98767', '98768', '98769', '98770', '98771', '98772', '98773', '98774', '98775', '98776', '98777', '98778', '98779', '98780', '98781', '98782', '98783', '04584', '04585', '04601', '04602', '04603', '04604', '04605', '04606', '04607', '04608', '04720', '04719', '04718', '04717', '04716', '04715', '04714', '04727', '04726', '04725', '04724', '04723', '04722', '04721', '04690', '04691', '04692', '04693', '04694', '04695', '04696', '04697', '04698', '04699', '04700', '04701', '04702', '04703', '04704', '04705', '04706', '04707', '04708', '04709', '04710', '04711', '04712', '04742', '04744', '04746', '04748', '04795', '04796', '04797', '04798', '04799', '04800', '04821', '04822', '04823', '04824', '04825', '04826', '04827', '04828', '04829', '04830', '04736', '04738', '04743', '04745', '04747', '04749', '05158', '05159', '05160', '05161', '05162', '05165', '05166', '05167', '05168', '05169', '05170', '05171', '05172', '05173', '05174', '05175', '05176', '05177', '05178', '05179', '05180', '05181', '05182', '05183', '05184', '05185', '05186', '05187', '05188', '05189', '05190', '05191', '05201', '05202', '05203', '05204', '05205', '05206', '05207','05208', '05209', '05210', '05211', '05212', '05213', '05214', '05215', '05216', '05217', '05218', '05219', '05220', '05221', '05222', '05223', '05224', '05281', '05282', '05283', '05284', '05285', '05286', '05287', '05288', '05289', '05290', '05291', '05292', '05293', '05294', '05295', '05296', '05297', '05298', '05299', '05300', '05301', '05302', '05303', '05304', '05305', '05306', '05324', '05325', '05326', '05327', '05328', '05329', '05330', '05331', '05332', '05333', '05345', '05344', '05343', '05342', '05410', '05411', '05412', '05413', '05414', '05415', '05416', '05417', '05423', '05424', '05425', '05426',
            ),
            'LinkStation' => array(
                 '00309', '00544', '00545', '00546', '00547', '00548', '00549', '00550', '00551', '00552', '00553', '00554', '00555', '00556', '00557', '00558', '00559', '00585', '00586', '00587', '00588', '00589', '00590', '00591', '00592', '00593', '00594', '00595', '00596', '00597', '00598', '00599', '00600', '00601', '00602', '00603', '00604', '01393', '01692', '01693', '01694', '01695', '01696', '01697', '01948', '01949', '01950', '01952', '01956', '01957', '01958', '01959', '01960', '01961', '01962', '01963', '01973', '01974', '01975', '01976', '01977', '01978', '01979', '01980', '01981', '01982', '01983', '02036', '02037', '02038', '02039', '02040', '02267', '02268', '02381', '02382', '02383', '02384', '02385', '02386', '02387', '02388', '02389', '02893', '02894', '02895', '02896', '02897', '03605', '03606', '03607', '03608', '03609', '03610', '03611', '03612', '03613', '03614', '03615', '04044', '58137', '58138', '58378', '58380', '58513', '58515', '58952', '58975','02893','04045','04046','04412','04413','04414','04415','04416','04417', '04418', '04419', '04487', '04488', '04928', '04929', '04930', '04931', '05261', '05262',
            )
        );
    }
    
    public function serialCheckValidator($serial)
    {
//        $db = Yii::$app->db;
        //Remove all non-numberic characters from the prompt
        $serial = preg_replace('/[^0-9]/','',$serial);

        // compose the query
        $exist = false;
//        if(!$this->$attribute) $exist = false;
//        else $exist = $db->createCommand('SELECT * FROM serial_numbers WHERE `serial`="'.$this->$attribute.'"')->queryAll();
        
        //Find shortened JAN code
        $shortJAN = substr($serial,1,5);

        $data = false;
        $product_id = '';

        // Regular JAN codes check
        foreach ($this->jan_codes as $id => $codes) {
            if ($data) {
                break;
            }

            foreach ($codes as $code) {
                if ($data) {
                    break;
                }

                $data = $shortJAN == $code;
                $product_id = $id;
            }
        }

        // Split the input serial number into an array of digits
        $digit_array = str_split($serial);

        // Split digits into two arrays
        $counter = 1;

        $first_digit_array = array();
        $second_digit_array = array();

        // Grab the last digit of the input serial number (checkdigit)
        $check_digit = intval(array_pop($digit_array));

        foreach ($digit_array as $digit) {
            if ($counter == 1) {
                array_push($first_digit_array, $digit);
                $counter = 2;
            } elseif ($counter == 2) {
                array_push($second_digit_array, $digit);
                $counter = 1;
            }
        }

        // Check-digit equations
        // Array #1 is sum(digits) * 3
        $first_array_calculation = array_sum($first_digit_array) * 3;

        // Array #2 is sum(digits)
        $second_array_calculation = array_sum($second_digit_array);

        // Sum(Array #1, Array #2)
        $total_calculation = $first_array_calculation + $second_array_calculation;

        // Get the last digit of the sum (e.g. - sum of array #1 + array #2 == 78, result is '8')
        $last_digit = substr($total_calculation, -1);

        // Subtract 10 from the last digit
        $final_check_digit = 10 - $last_digit;

        // Set to zero to make sure
        if ($final_check_digit == 10) {
            $final_check_digit = 0;
        }

        if ($check_digit == $final_check_digit) {
            return $product_id;
        }
        else{
            return false;
        }
    }
    
}